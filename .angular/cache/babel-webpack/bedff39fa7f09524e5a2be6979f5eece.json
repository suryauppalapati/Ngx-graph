{"ast":null,"code":"import * as shape from 'd3-shape';\nimport { nodes, clusters, links } from './data';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/sidenav\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/checkbox\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@swimlane/ngx-graph\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction AppComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const l_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", l_r10.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", l_r10.label, \" \");\n  }\n}\n\nfunction AppComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const curveType_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", curveType_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", curveType_r11, \" \");\n  }\n}\n\nfunction AppComponent_ng_template_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"marker\", 23);\n    i0.ɵɵelement(1, \"path\", 24);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_ng_template_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 25);\n    i0.ɵɵelement(1, \"rect\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cluster_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"width\", cluster_r12.dimension.width)(\"height\", cluster_r12.dimension.height)(\"fill\", cluster_r12.data.color);\n  }\n}\n\nfunction AppComponent_ng_template_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 27);\n    i0.ɵɵelement(1, \"rect\");\n    i0.ɵɵelementStart(2, \"text\", 28);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"width\", node_r13.dimension.width)(\"height\", node_r13.dimension.height)(\"fill\", node_r13.data.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x\", 10)(\"y\", node_r13.dimension.height / 2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(node_r13.label);\n  }\n}\n\nfunction AppComponent_ng_template_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 29);\n    i0.ɵɵelement(1, \"path\", 30);\n    i0.ɵɵelementStart(2, \"text\", 31);\n    i0.ɵɵelementStart(3, \"textPath\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const link_r14 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"dominant-baseline\", link_r14.dominantBaseline);\n    i0.ɵɵattribute(\"href\", \"#\" + link_r14.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", link_r14.label, \" \");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.name = 'NGX-Graph Demo';\n      this.nodes = nodes;\n      this.clusters = clusters;\n      this.links = links;\n      this.layout = 'dagreCluster';\n      this.layouts = [{\n        label: 'Dagre',\n        value: 'dagre'\n      }, {\n        label: 'Dagre Cluster',\n        value: 'dagreCluster',\n        isClustered: true\n      }, {\n        label: 'Cola Force Directed',\n        value: 'colaForceDirected',\n        isClustered: true\n      }, {\n        label: 'D3 Force Directed',\n        value: 'd3ForceDirected'\n      }]; // line interpolation\n\n      this.curveType = 'Bundle';\n      this.curve = shape.curveLinear;\n      this.interpolationTypes = ['Bundle', 'Cardinal', 'Catmull Rom', 'Linear', 'Monotone X', 'Monotone Y', 'Natural', 'Step', 'Step After', 'Step Before'];\n      this.draggingEnabled = true;\n      this.panningEnabled = true;\n      this.zoomEnabled = true;\n      this.zoomSpeed = 0.1;\n      this.minZoomLevel = 0.1;\n      this.maxZoomLevel = 4.0;\n      this.panOnZoom = true;\n      this.autoZoom = false;\n      this.autoCenter = false;\n      this.update$ = new Subject();\n      this.center$ = new Subject();\n      this.zoomToFit$ = new Subject();\n    }\n\n    ngOnInit() {\n      this.setInterpolationType(this.curveType);\n    }\n\n    setInterpolationType(curveType) {\n      this.curveType = curveType;\n\n      if (curveType === 'Bundle') {\n        this.curve = shape.curveBundle.beta(1);\n      }\n\n      if (curveType === 'Cardinal') {\n        this.curve = shape.curveCardinal;\n      }\n\n      if (curveType === 'Catmull Rom') {\n        this.curve = shape.curveCatmullRom;\n      }\n\n      if (curveType === 'Linear') {\n        this.curve = shape.curveLinear;\n      }\n\n      if (curveType === 'Monotone X') {\n        this.curve = shape.curveMonotoneX;\n      }\n\n      if (curveType === 'Monotone Y') {\n        this.curve = shape.curveMonotoneY;\n      }\n\n      if (curveType === 'Natural') {\n        this.curve = shape.curveNatural;\n      }\n\n      if (curveType === 'Step') {\n        this.curve = shape.curveStep;\n      }\n\n      if (curveType === 'Step After') {\n        this.curve = shape.curveStepAfter;\n      }\n\n      if (curveType === 'Step Before') {\n        this.curve = shape.curveStepBefore;\n      }\n    }\n\n    setLayout(layoutName) {\n      const layout = this.layouts.find(l => l.value === layoutName);\n      this.layout = layoutName;\n\n      if (!layout.isClustered) {\n        this.clusters = undefined;\n      } else {\n        this.clusters = clusters;\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"my-app\"]],\n    decls: 46,\n    vars: 32,\n    consts: [[1, \"example-container\"], [\"mode\", \"side\", \"opened\", \"\", 1, \"sidebar\"], [1, \"settings\"], [\"placeholder\", \"Layout\", \"name\", \"layout\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Line Curve Interpolation\", \"name\", \"curve\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"draggingEnabled\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"panningEnabled\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"zoonEnabled\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"zoomSpeed\", \"placeholder\", \"Zoom speed\", \"step\", \"0.1\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"minZoomLevel\", \"placeholder\", \"Min Zoom Level\", \"min\", \"0\", \"step\", \"0.1\", 3, \"ngModel\", \"max\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"maxZoomLevel\", \"placeholder\", \"Max Zoom Level\", \"step\", \"0.1\", 3, \"ngModel\", \"min\", \"ngModelChange\"], [\"name\", \"panOnZoom\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"autoZoom\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"autoCenter\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", 1, \"button\", 3, \"click\"], [1, \"page\"], [3, \"links\", \"nodes\", \"clusters\", \"layout\", \"curve\", \"draggingEnabled\", \"panningEnabled\", \"enableZoom\", \"zoomSpeed\", \"minZoomLevel\", \"maxZoomLevel\", \"panOnZoom\", \"autoZoom\", \"autoCenter\", \"update$\", \"center$\", \"zoomToFit$\"], [\"defsTemplate\", \"\"], [\"clusterTemplate\", \"\"], [\"nodeTemplate\", \"\"], [\"linkTemplate\", \"\"], [3, \"value\"], [\"id\", \"arrow\", \"viewBox\", \"0 -5 10 10\", \"refX\", \"8\", \"refY\", \"0\", \"markerWidth\", \"4\", \"markerHeight\", \"4\", \"orient\", \"auto\"], [\"d\", \"M0,-5L10,0L0,5\", 1, \"arrow-head\"], [1, \"node\", \"cluster\"], [\"rx\", \"5\", \"ry\", \"5\"], [1, \"node\"], [\"alignment-baseline\", \"central\"], [1, \"edge\"], [\"stroke-width\", \"2\", \"marker-end\", \"url(#arrow)\", 1, \"line\"], [\"text-anchor\", \"middle\", 1, \"edge-label\"], [\"startOffset\", \"50%\", 1, \"text-path\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-drawer-container\", 0);\n        i0.ɵɵelementStart(1, \"mat-drawer\", 1);\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Configuration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵelementStart(5, \"mat-form-field\");\n        i0.ɵɵelementStart(6, \"mat-select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_select_ngModelChange_6_listener($event) {\n          return ctx.setLayout($event);\n        });\n        i0.ɵɵtemplate(7, AppComponent_mat_option_7_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\");\n        i0.ɵɵelementStart(9, \"mat-select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_select_ngModelChange_9_listener($event) {\n          return ctx.setInterpolationType($event);\n        });\n        i0.ɵɵtemplate(10, AppComponent_mat_option_10_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-checkbox\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_checkbox_ngModelChange_11_listener($event) {\n          return ctx.draggingEnabled = $event;\n        });\n        i0.ɵɵtext(12, \"Enable Dragging\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-checkbox\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_checkbox_ngModelChange_13_listener($event) {\n          return ctx.panningEnabled = $event;\n        });\n        i0.ɵɵtext(14, \"Enable Panning\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-checkbox\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_checkbox_ngModelChange_15_listener($event) {\n          return ctx.zoomEnabled = $event;\n        });\n        i0.ɵɵtext(16, \"Enable Zoom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\");\n        i0.ɵɵelementStart(18, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.zoomSpeed = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\");\n        i0.ɵɵelementStart(20, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.minZoomLevel = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\");\n        i0.ɵɵelementStart(22, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.maxZoomLevel = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-checkbox\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_checkbox_ngModelChange_23_listener($event) {\n          return ctx.panOnZoom = $event;\n        });\n        i0.ɵɵtext(24, \"Pan while zooming\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-checkbox\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_checkbox_ngModelChange_25_listener($event) {\n          return ctx.autoZoom = $event;\n        });\n        i0.ɵɵtext(26, \"Auto Zoom \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-checkbox\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_checkbox_ngModelChange_27_listener($event) {\n          return ctx.autoCenter = $event;\n        });\n        i0.ɵɵtext(28, \"Auto Center \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_29_listener() {\n          return ctx.update$.next(true);\n        });\n        i0.ɵɵtext(30, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_31_listener() {\n          return ctx.center$.next(true);\n        });\n        i0.ɵɵtext(32, \"Center\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_33_listener() {\n          return ctx.zoomToFit$.next(true);\n        });\n        i0.ɵɵtext(34, \"Zoom to fit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"mat-drawer-content\");\n        i0.ɵɵelementStart(36, \"div\", 16);\n        i0.ɵɵelementStart(37, \"ngx-graph\", 17);\n        i0.ɵɵtemplate(38, AppComponent_ng_template_38_Template, 2, 0, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(40, AppComponent_ng_template_40_Template, 2, 3, \"ng-template\", null, 19, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(42, AppComponent_ng_template_42_Template, 4, 6, \"ng-template\", null, 20, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(44, AppComponent_ng_template_44_Template, 5, 4, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.layout);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.layouts);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.curveType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.interpolationTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.draggingEnabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.panningEnabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.zoomEnabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.zoomSpeed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.minZoomLevel)(\"max\", ctx.maxZoomLevel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.maxZoomLevel)(\"min\", ctx.minZoomLevel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.panOnZoom);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.autoZoom);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.autoCenter);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"links\", ctx.links)(\"nodes\", ctx.nodes)(\"clusters\", ctx.clusters)(\"layout\", ctx.layout)(\"curve\", ctx.curve)(\"draggingEnabled\", ctx.draggingEnabled)(\"panningEnabled\", ctx.panningEnabled)(\"enableZoom\", ctx.zoomEnabled)(\"zoomSpeed\", ctx.zoomSpeed)(\"minZoomLevel\", ctx.minZoomLevel)(\"maxZoomLevel\", ctx.maxZoomLevel)(\"panOnZoom\", ctx.panOnZoom)(\"autoZoom\", ctx.autoZoom)(\"autoCenter\", ctx.autoCenter)(\"update$\", ctx.update$)(\"center$\", ctx.center$)(\"zoomToFit$\", ctx.zoomToFit$);\n      }\n    },\n    directives: [i1.MatDrawerContainer, i1.MatDrawer, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.MatFormField, i4.MatSelect, i2.NgControlStatus, i2.NgModel, i5.NgForOf, i6.MatCheckbox, i7.MatInput, i2.NumberValueAccessor, i2.DefaultValueAccessor, i2.MinValidator, i2.MaxValidator, i8.MatButton, i1.MatDrawerContent, i9.GraphComponent, i10.MatOption],\n    styles: [\"p[_ngcontent-%COMP%]{font-family:Lato}.sidebar[_ngcontent-%COMP%]{background:#efefef;padding:10px}.page[_ngcontent-%COMP%]{width:100%;height:100vh;overflow:hidden}mat-form-field[_ngcontent-%COMP%], mat-checkbox[_ngcontent-%COMP%]{display:block;width:100%}mat-checkbox[_ngcontent-%COMP%]{margin-bottom:10px}.button[_ngcontent-%COMP%]{margin:3px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}